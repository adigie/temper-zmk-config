/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NUM 1
#define NAV 2
#define FUN 3
#define BLE 4

// 36 keys layout

#define LEFT_KEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 // left-hand keys
#define RIGHT_KEYS 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35 // right-hand keys

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        nav_cond {
            if-layers = <1 2>;
            then-layer = <4>;
        };

        f_cond {
            if-layers = <1 3>;
            then-layer = <5>;
        };

        bt_cond {
            if-layers = <2 3>;
            then-layer = <6>;
        };
    };

    behaviors {
        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            hold-trigger-key-positions = <RIGHT_KEYS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            hold-trigger-key-positions = <LEFT_KEYS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        super_bspc: super_backspace {
            compatible = "zmk,behavior-mod-morph";
            label = "SUPER_BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        smart_shft: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&caps_word>;

            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W        &kp E         &kp R         &kp T        &kp Y        &kp U         &kp I         &kp O        &kp P
&lhm LGUI A  &lhm LALT S  &lhm LCTRL D  &lhm LSHFT F  &lhm RALT G  &rhm RALT H  &rhm LSHFT J  &rhm LCTRL K  &rhm LALT L  &rhm LGUI SEMI
&kp Z        &kp X        &kp C         &kp V         &kp B        &kp N        &kp M         &kp COMMA     &kp DOT      &kp FSLH
                          &lt 3 ESC     &lt 2 TAB     &smart_shft  &kp RET      &lt 1 SPACE   &super_bspc
            >;
        };

        num_layer {
            bindings = <
&kp N1     &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
&kp TILDE  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                   &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        sym_layer {
            bindings = <
&kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp ASTRK  &trans  &trans
&trans    &trans  &trans    &trans    &trans     &trans     &trans    &trans     &trans  &trans
&trans    &trans  &trans    &trans    &trans     &trans     &trans    &trans     &trans  &trans
                  &trans    &trans    &trans     &trans     &trans    &trans
            >;
        };

        media_numpad_layer {
            bindings = <
&kp C_BRI_UP  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none    &kp FSLH   &kp N7  &kp N8  &kp N9  &kp MINUS
&kp C_BRI_DN  &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT       &kp TAB  &kp ASTRK  &kp N4  &kp N5  &kp N6  &kp PLUS
&none         &none       &none              &none            &none    &kp N0     &kp N1  &kp N2  &kp N3  &kp EQUAL
                          &trans             &trans           &trans   &trans     &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&none     &none     &none      &none      &none     &kp PSCRN  &kp INSERT  &kp HOME  &kp PG_UP  &kp TAB
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp RALT  &kp LEFT   &kp DOWN    &kp UP    &kp RIGHT  &none
&none     &none     &none      &none      &none     &none      &kp DEL     &kp END   &kp PG_DN  &kp GRAVE
                    &none      &none      &none     &none      &none       &none
            >;
        };

        f_layer {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none  &none  &none
            >;
        };

        bt_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none           &bt BT_NXT  &bt BT_PRV  &none  &none
&none         &none         &none         &none         &none         &none           &none       &none       &none  &none
&none         &none         &none         &none         &none         &none           &none       &none       &none  &none
                            &none         &none         &bt BT_CLR    &bt BT_CLR_ALL  &none       &none
            >;
        };
    };
};
